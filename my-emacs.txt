;;putting in a comment for fun.
(setq frame-title-format "Not Evil Yet")
(menu-bar-mode 1)
(tool-bar-mode -1)

(require 'package)
(add-to-list 'package-archives '("Melpa" . "http://melpa.org/packages/"))
(package-initialize)
(require 'evil)
(evil-mode 1)
	     
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (manoj-dark)))
 '(inhibit-startup-screen t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; **************** Start Block .ls **************** 
;; This hook function only sets colorscheme when our file has the extension ls
(defun ls-hook ()
  (when (string= (file-name-extension buffer-file-name) "ls")
    ;; This changes the standard colorscheme
    (custom-set-faces
      '(background "Black")
      '(font-lock-function-name-face ((t (:height 110 :bold nil :foreground "#00ff00"))))
      '(font-lock-string-face ((t (:foreground "#FFFF00"))))
      '(font-lock-keyword-face ((t (:italic nil :foreground "#FF0000"))))
      '(font-lock-comment-face ((t (:foreground "#00FFFF")))))
      ))

;; Regex of Highlighting the lines - using the above color scheme
(setq ls-highlights
    ;; Lines ending with '.' GREEN
  '(("^.*\\.\s*$" . font-lock-function-name-face)
    ;; Lines ending with '?' YELLOW
    ("^.*\\?\s*$" . font-lock-string-face)
    ;; Lines ending with ';' RED
    ("^.*;\s*$" . font-lock-keyword-face)
    ;; Lines ending with '!' LIGHT BLUE
    ("^.*\\!\s*$" . font-lock-comment-face)))
;; Create 'ls-mode' which includes Org-Mode Features
(define-derived-mode ls-mode org-mode "ls"
  "major mode for editing ls files."
  (setq font-lock-defaults '(ls-highlights)))
;; Makes .ls files automatically start in ls-mode
(add-to-list 'auto-mode-alist '("\\.ls\\'" . ls-mode))
;; Adding our colorscheme func to the find-file-hook event
(add-hook 'find-file-hook 'ls-hook)
;; **************** End Block .ls ****************

